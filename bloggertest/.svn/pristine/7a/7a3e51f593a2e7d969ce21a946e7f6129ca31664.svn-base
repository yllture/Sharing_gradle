<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neuedu.dao.BankfolderMapper" >
  <resultMap id="BaseResultMap" type="com.neuedu.entity.Bankfolder" >
    <id column="folderid" property="folderid" jdbcType="INTEGER" />
    <result column="foldername" property="foldername" jdbcType="VARCHAR" />
    <result column="userid" property="userid" jdbcType="INTEGER" />
    <result column="c1" property="c1" jdbcType="VARCHAR" />
    <result column="c2" property="c2" jdbcType="VARCHAR" />
    <result column="c3" property="c3" jdbcType="INTEGER" />
    <result column="c4" property="c4" jdbcType="INTEGER" />
 	<collection property="banklist" resultMap="com.neuedu.dao.BankMapper.BaseResultMap">
    </collection>
 
 
  </resultMap>
  
  
  
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    folderid, foldername, userid, c1, c2, c3, c4
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.neuedu.entity.BankfolderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bankfolder
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from bankfolder
    where folderid = #{folderid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from bankfolder
    where folderid = #{folderid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.neuedu.entity.BankfolderExample" >
    delete from bankfolder
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.neuedu.entity.Bankfolder" >
    insert into bankfolder (folderid, foldername, userid, 
      c1, c2, c3, c4
      )
    values (#{folderid,jdbcType=INTEGER}, #{foldername,jdbcType=VARCHAR}, #{userid,jdbcType=INTEGER}, 
      #{c1,jdbcType=VARCHAR}, #{c2,jdbcType=VARCHAR}, #{c3,jdbcType=INTEGER}, #{c4,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.neuedu.entity.Bankfolder" >
    insert into bankfolder
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="folderid != null" >
        folderid,
      </if>
      <if test="foldername != null" >
        foldername,
      </if>
      <if test="userid != null" >
        userid,
      </if>
      <if test="c1 != null" >
        c1,
      </if>
      <if test="c2 != null" >
        c2,
      </if>
      <if test="c3 != null" >
        c3,
      </if>
      <if test="c4 != null" >
        c4,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="folderid != null" >
        #{folderid,jdbcType=INTEGER},
      </if>
      <if test="foldername != null" >
        #{foldername,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="c1 != null" >
        #{c1,jdbcType=VARCHAR},
      </if>
      <if test="c2 != null" >
        #{c2,jdbcType=VARCHAR},
      </if>
      <if test="c3 != null" >
        #{c3,jdbcType=INTEGER},
      </if>
      <if test="c4 != null" >
        #{c4,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neuedu.entity.BankfolderExample" resultType="java.lang.Integer" >
    select count(*) from bankfolder
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update bankfolder
    <set >
      <if test="record.folderid != null" >
        folderid = #{record.folderid,jdbcType=INTEGER},
      </if>
      <if test="record.foldername != null" >
        foldername = #{record.foldername,jdbcType=VARCHAR},
      </if>
      <if test="record.userid != null" >
        userid = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.c1 != null" >
        c1 = #{record.c1,jdbcType=VARCHAR},
      </if>
      <if test="record.c2 != null" >
        c2 = #{record.c2,jdbcType=VARCHAR},
      </if>
      <if test="record.c3 != null" >
        c3 = #{record.c3,jdbcType=INTEGER},
      </if>
      <if test="record.c4 != null" >
        c4 = #{record.c4,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update bankfolder
    set folderid = #{record.folderid,jdbcType=INTEGER},
      foldername = #{record.foldername,jdbcType=VARCHAR},
      userid = #{record.userid,jdbcType=INTEGER},
      c1 = #{record.c1,jdbcType=VARCHAR},
      c2 = #{record.c2,jdbcType=VARCHAR},
      c3 = #{record.c3,jdbcType=INTEGER},
      c4 = #{record.c4,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neuedu.entity.Bankfolder" >
    update bankfolder
    <set >
      <if test="foldername != null" >
        foldername = #{foldername,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        userid = #{userid,jdbcType=INTEGER},
      </if>
      <if test="c1 != null" >
        c1 = #{c1,jdbcType=VARCHAR},
      </if>
      <if test="c2 != null" >
        c2 = #{c2,jdbcType=VARCHAR},
      </if>
      <if test="c3 != null" >
        c3 = #{c3,jdbcType=INTEGER},
      </if>
      <if test="c4 != null" >
        c4 = #{c4,jdbcType=INTEGER},
      </if>
    </set>
    where folderid = #{folderid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neuedu.entity.Bankfolder" >
    update bankfolder
    set foldername = #{foldername,jdbcType=VARCHAR},
      userid = #{userid,jdbcType=INTEGER},
      c1 = #{c1,jdbcType=VARCHAR},
      c2 = #{c2,jdbcType=VARCHAR},
      c3 = #{c3,jdbcType=INTEGER},
      c4 = #{c4,jdbcType=INTEGER}
    where folderid = #{folderid,jdbcType=INTEGER}
  </update>
  
  <select id ="getAllbyUserid" parameterType="Integer" resultMap="BaseResultMap">
  select *
  from bankfolder bf
  where bf.userid = #{userid} and bf.c4 is null

  
  </select>
  
  
  <select id ="getAllbyFolderid" parameterType="Integer" resultMap="BaseResultMap">
  select *
  from bankfolder bf
  where  bf.c4 =#{folderid}

  
  </select>
</mapper>