<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neuedu.dao.Shop_bankMapper" >
  <resultMap id="BaseResultMap" type="com.neuedu.entity.Shop_bank" >
    <id column="bankid" property="bankid" jdbcType="INTEGER" />
    <result column="bankname" property="bankname" jdbcType="VARCHAR" />
    <result column="bankdescription" property="bankdescription" jdbcType="VARCHAR" />
    <result column="banklabel" property="banklabel" jdbcType="VARCHAR" />
    <result column="userid" property="userid" jdbcType="INTEGER" />
    <result column="questionnum" property="questionnum" jdbcType="INTEGER" />
    <result column="signlenum" property="signlenum" jdbcType="INTEGER" />
    <result column="judgenum" property="judgenum" jdbcType="INTEGER" />
    <result column="multiplenum" property="multiplenum" jdbcType="INTEGER" />
    <result column="shortanswernum" property="shortanswernum" jdbcType="INTEGER" />
    <result column="fillnum" property="fillnum" jdbcType="INTEGER" />
    <result column="price" property="price" jdbcType="INTEGER" />
    <result column="time" property="time" jdbcType="TIMESTAMP" />
    <result column="paynum" property="paynum" jdbcType="INTEGER" />
    <result column="avgevaluate" property="avgevaluate" jdbcType="INTEGER" />
    <result column="checkflag" property="checkflag" jdbcType="INTEGER" />
    <result column="c1" property="c1" jdbcType="VARCHAR" />
    <result column="c2" property="c2" jdbcType="VARCHAR" />
    <result column="c3" property="c3" jdbcType="INTEGER" />
    <result column="c4" property="c4" jdbcType="INTEGER" />
    
    <association property="user" javaType="com.neuedu.entity.User">
     <id column="userid" property="userid" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="useraccount" property="useraccount" jdbcType="VARCHAR" />
    <result column="usermail" property="usermail" jdbcType="VARCHAR" />
    <result column="tel" property="tel" jdbcType="VARCHAR" />
    <result column="userposition" property="userposition" jdbcType="VARCHAR" />
    <result column="usercompany" property="usercompany" jdbcType="VARCHAR" />
    <result column="usercompanylogo" property="usercompanylogo" jdbcType="VARCHAR" />
    <result column="usertype" property="usertype" jdbcType="INTEGER" />
    <result column="userpassword" property="userpassword" jdbcType="VARCHAR" />
    <result column="integral" property="integral" jdbcType="INTEGER" />
    <result column="icon" property="icon" jdbcType="VARCHAR" />
    <result column="outundonenum" property="outundonenum" jdbcType="INTEGER" />
    <result column="donenum" property="donenum" jdbcType="INTEGER" />
    <result column="inundomenum" property="inundomenum" jdbcType="INTEGER" />
    <result column="futurenum" property="futurenum" jdbcType="INTEGER" />
    <result column="c1" property="c1" jdbcType="VARCHAR" />
    <result column="c2" property="c2" jdbcType="VARCHAR" />
    <result column="c3" property="c3" jdbcType="INTEGER" />
    <result column="c4" property="c4" jdbcType="INTEGER" />
     </association>
    
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    bankid, bankname, bankdescription, banklabel, userid, questionnum, signlenum, judgenum, 
    multiplenum, shortanswernum, fillnum, price, time, paynum, avgevaluate, checkflag, 
    c1, c2, c3, c4
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.neuedu.entity.Shop_bankExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from shop_bank
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from shop_bank
    where bankid = #{bankid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from shop_bank
    where bankid = #{bankid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.neuedu.entity.Shop_bankExample" >
    delete from shop_bank
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.neuedu.entity.Shop_bank" >
    insert into shop_bank (bankid, bankname, bankdescription, 
      banklabel, userid, questionnum, 
      signlenum, judgenum, multiplenum, 
      shortanswernum, fillnum, price, 
      time, paynum, avgevaluate, 
      checkflag, c1, c2, 
      c3, c4)
    values (#{bankid,jdbcType=INTEGER}, #{bankname,jdbcType=VARCHAR}, #{bankdescription,jdbcType=VARCHAR}, 
      #{banklabel,jdbcType=VARCHAR}, #{userid,jdbcType=INTEGER}, #{questionnum,jdbcType=INTEGER}, 
      #{signlenum,jdbcType=INTEGER}, #{judgenum,jdbcType=INTEGER}, #{multiplenum,jdbcType=INTEGER}, 
      #{shortanswernum,jdbcType=INTEGER}, #{fillnum,jdbcType=INTEGER}, #{price,jdbcType=INTEGER}, 
      #{time,jdbcType=TIMESTAMP}, #{paynum,jdbcType=INTEGER}, #{avgevaluate,jdbcType=INTEGER}, 
      #{checkflag,jdbcType=INTEGER}, #{c1,jdbcType=VARCHAR}, #{c2,jdbcType=VARCHAR}, 
      #{c3,jdbcType=INTEGER}, #{c4,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.neuedu.entity.Shop_bank" >
    insert into shop_bank
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="bankid != null" >
        bankid,
      </if>
      <if test="bankname != null" >
        bankname,
      </if>
      <if test="bankdescription != null" >
        bankdescription,
      </if>
      <if test="banklabel != null" >
        banklabel,
      </if>
      <if test="userid != null" >
        userid,
      </if>
      <if test="questionnum != null" >
        questionnum,
      </if>
      <if test="signlenum != null" >
        signlenum,
      </if>
      <if test="judgenum != null" >
        judgenum,
      </if>
      <if test="multiplenum != null" >
        multiplenum,
      </if>
      <if test="shortanswernum != null" >
        shortanswernum,
      </if>
      <if test="fillnum != null" >
        fillnum,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="time != null" >
        time,
      </if>
      <if test="paynum != null" >
        paynum,
      </if>
      <if test="avgevaluate != null" >
        avgevaluate,
      </if>
      <if test="checkflag != null" >
        checkflag,
      </if>
      <if test="c1 != null" >
        c1,
      </if>
      <if test="c2 != null" >
        c2,
      </if>
      <if test="c3 != null" >
        c3,
      </if>
      <if test="c4 != null" >
        c4,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="bankid != null" >
        #{bankid,jdbcType=INTEGER},
      </if>
      <if test="bankname != null" >
        #{bankname,jdbcType=VARCHAR},
      </if>
      <if test="bankdescription != null" >
        #{bankdescription,jdbcType=VARCHAR},
      </if>
      <if test="banklabel != null" >
        #{banklabel,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="questionnum != null" >
        #{questionnum,jdbcType=INTEGER},
      </if>
      <if test="signlenum != null" >
        #{signlenum,jdbcType=INTEGER},
      </if>
      <if test="judgenum != null" >
        #{judgenum,jdbcType=INTEGER},
      </if>
      <if test="multiplenum != null" >
        #{multiplenum,jdbcType=INTEGER},
      </if>
      <if test="shortanswernum != null" >
        #{shortanswernum,jdbcType=INTEGER},
      </if>
      <if test="fillnum != null" >
        #{fillnum,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        #{price,jdbcType=INTEGER},
      </if>
      <if test="time != null" >
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="paynum != null" >
        #{paynum,jdbcType=INTEGER},
      </if>
      <if test="avgevaluate != null" >
        #{avgevaluate,jdbcType=INTEGER},
      </if>
      <if test="checkflag != null" >
        #{checkflag,jdbcType=INTEGER},
      </if>
      <if test="c1 != null" >
        #{c1,jdbcType=VARCHAR},
      </if>
      <if test="c2 != null" >
        #{c2,jdbcType=VARCHAR},
      </if>
      <if test="c3 != null" >
        #{c3,jdbcType=INTEGER},
      </if>
      <if test="c4 != null" >
        #{c4,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neuedu.entity.Shop_bankExample" resultType="java.lang.Integer" >
    select count(*) from shop_bank
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update shop_bank
    <set >
      <if test="record.bankid != null" >
        bankid = #{record.bankid,jdbcType=INTEGER},
      </if>
      <if test="record.bankname != null" >
        bankname = #{record.bankname,jdbcType=VARCHAR},
      </if>
      <if test="record.bankdescription != null" >
        bankdescription = #{record.bankdescription,jdbcType=VARCHAR},
      </if>
      <if test="record.banklabel != null" >
        banklabel = #{record.banklabel,jdbcType=VARCHAR},
      </if>
      <if test="record.userid != null" >
        userid = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.questionnum != null" >
        questionnum = #{record.questionnum,jdbcType=INTEGER},
      </if>
      <if test="record.signlenum != null" >
        signlenum = #{record.signlenum,jdbcType=INTEGER},
      </if>
      <if test="record.judgenum != null" >
        judgenum = #{record.judgenum,jdbcType=INTEGER},
      </if>
      <if test="record.multiplenum != null" >
        multiplenum = #{record.multiplenum,jdbcType=INTEGER},
      </if>
      <if test="record.shortanswernum != null" >
        shortanswernum = #{record.shortanswernum,jdbcType=INTEGER},
      </if>
      <if test="record.fillnum != null" >
        fillnum = #{record.fillnum,jdbcType=INTEGER},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=INTEGER},
      </if>
      <if test="record.time != null" >
        time = #{record.time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.paynum != null" >
        paynum = #{record.paynum,jdbcType=INTEGER},
      </if>
      <if test="record.avgevaluate != null" >
        avgevaluate = #{record.avgevaluate,jdbcType=INTEGER},
      </if>
      <if test="record.checkflag != null" >
        checkflag = #{record.checkflag,jdbcType=INTEGER},
      </if>
      <if test="record.c1 != null" >
        c1 = #{record.c1,jdbcType=VARCHAR},
      </if>
      <if test="record.c2 != null" >
        c2 = #{record.c2,jdbcType=VARCHAR},
      </if>
      <if test="record.c3 != null" >
        c3 = #{record.c3,jdbcType=INTEGER},
      </if>
      <if test="record.c4 != null" >
        c4 = #{record.c4,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update shop_bank
    set bankid = #{record.bankid,jdbcType=INTEGER},
      bankname = #{record.bankname,jdbcType=VARCHAR},
      bankdescription = #{record.bankdescription,jdbcType=VARCHAR},
      banklabel = #{record.banklabel,jdbcType=VARCHAR},
      userid = #{record.userid,jdbcType=INTEGER},
      questionnum = #{record.questionnum,jdbcType=INTEGER},
      signlenum = #{record.signlenum,jdbcType=INTEGER},
      judgenum = #{record.judgenum,jdbcType=INTEGER},
      multiplenum = #{record.multiplenum,jdbcType=INTEGER},
      shortanswernum = #{record.shortanswernum,jdbcType=INTEGER},
      fillnum = #{record.fillnum,jdbcType=INTEGER},
      price = #{record.price,jdbcType=INTEGER},
      time = #{record.time,jdbcType=TIMESTAMP},
      paynum = #{record.paynum,jdbcType=INTEGER},
      avgevaluate = #{record.avgevaluate,jdbcType=INTEGER},
      checkflag = #{record.checkflag,jdbcType=INTEGER},
      c1 = #{record.c1,jdbcType=VARCHAR},
      c2 = #{record.c2,jdbcType=VARCHAR},
      c3 = #{record.c3,jdbcType=INTEGER},
      c4 = #{record.c4,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neuedu.entity.Shop_bank" >
    update shop_bank
    <set >
      <if test="bankname != null" >
        bankname = #{bankname,jdbcType=VARCHAR},
      </if>
      <if test="bankdescription != null" >
        bankdescription = #{bankdescription,jdbcType=VARCHAR},
      </if>
      <if test="banklabel != null" >
        banklabel = #{banklabel,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        userid = #{userid,jdbcType=INTEGER},
      </if>
      <if test="questionnum != null" >
        questionnum = #{questionnum,jdbcType=INTEGER},
      </if>
      <if test="signlenum != null" >
        signlenum = #{signlenum,jdbcType=INTEGER},
      </if>
      <if test="judgenum != null" >
        judgenum = #{judgenum,jdbcType=INTEGER},
      </if>
      <if test="multiplenum != null" >
        multiplenum = #{multiplenum,jdbcType=INTEGER},
      </if>
      <if test="shortanswernum != null" >
        shortanswernum = #{shortanswernum,jdbcType=INTEGER},
      </if>
      <if test="fillnum != null" >
        fillnum = #{fillnum,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=INTEGER},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="paynum != null" >
        paynum = #{paynum,jdbcType=INTEGER},
      </if>
      <if test="avgevaluate != null" >
        avgevaluate = #{avgevaluate,jdbcType=INTEGER},
      </if>
      <if test="checkflag != null" >
        checkflag = #{checkflag,jdbcType=INTEGER},
      </if>
      <if test="c1 != null" >
        c1 = #{c1,jdbcType=VARCHAR},
      </if>
      <if test="c2 != null" >
        c2 = #{c2,jdbcType=VARCHAR},
      </if>
      <if test="c3 != null" >
        c3 = #{c3,jdbcType=INTEGER},
      </if>
      <if test="c4 != null" >
        c4 = #{c4,jdbcType=INTEGER},
      </if>
    </set>
    where bankid = #{bankid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neuedu.entity.Shop_bank" >
    update shop_bank
    set bankname = #{bankname,jdbcType=VARCHAR},
      bankdescription = #{bankdescription,jdbcType=VARCHAR},
      banklabel = #{banklabel,jdbcType=VARCHAR},
      userid = #{userid,jdbcType=INTEGER},
      questionnum = #{questionnum,jdbcType=INTEGER},
      signlenum = #{signlenum,jdbcType=INTEGER},
      judgenum = #{judgenum,jdbcType=INTEGER},
      multiplenum = #{multiplenum,jdbcType=INTEGER},
      shortanswernum = #{shortanswernum,jdbcType=INTEGER},
      fillnum = #{fillnum,jdbcType=INTEGER},
      price = #{price,jdbcType=INTEGER},
      time = #{time,jdbcType=TIMESTAMP},
      paynum = #{paynum,jdbcType=INTEGER},
      avgevaluate = #{avgevaluate,jdbcType=INTEGER},
      checkflag = #{checkflag,jdbcType=INTEGER},
      c1 = #{c1,jdbcType=VARCHAR},
      c2 = #{c2,jdbcType=VARCHAR},
      c3 = #{c3,jdbcType=INTEGER},
      c4 = #{c4,jdbcType=INTEGER}
    where bankid = #{bankid,jdbcType=INTEGER}
  </update>
   <select id="selectByType" parameterType="com.neuedu.entity.Shop_bank" resultMap="BaseResultMap">
  select *
  from shop_bank bank,user u
  where bank.checkflag = #{checkflag,jdbcType=INTEGER}
  and bank.userid=u.userid 
  </select>
   <select id="selectByLabel" parameterType="com.neuedu.entity.Shop_bank" resultMap="BaseResultMap">
  select *
  from shop_bank bank,user u
  where bank.banklabel = #{banklabel,jdbcType=VARCHAR}
  and bank.userid=u.userid 
  and bank.checkflag=1
  </select>
    <select id="selectByBankid" parameterType="com.neuedu.entity.Shop_bank" resultMap="BaseResultMap">
  select * 
  from shop_bank bank,user u
  where bank.bankid = #{bankid,jdbcType=INTEGER}
  and bank.userid=u.userid 
  </select>
   <select id="selectByTime"  resultMap="BaseResultMap">
  select *
  from shop_bank bank,user u
  where bank.userid=u.userid 
  and bank.checkflag=1
  order by bank.time desc
  </select>
   <select id="selectByHeat"  resultMap="BaseResultMap">
  select *
  from shop_bank bank,user u
  where bank.userid=u.userid 
  and bank.checkflag=1
  order by bank.paynum desc
  </select>
 
 <select id="bankshopSearch" parameterType="com.neuedu.entity.Shop_bank" resultMap="BaseResultMap">
  select *
  from shop_bank bank,user u
  where (bank.bankname like '%#{bankname,jdbcType=VARCHAR}%' or bank.banklabel like '%#{banklabel,jdbcType=VARCHAR}%' or bank.bankdescription like '%#{bankdescription,jdbcType=VARCHAR}%' )
  and bank.userid=u.userid  
  </select>
 
   <select id="selectFreeBank"  resultMap="BaseResultMap">
  select *
  from shop_bank bank,user u
  where bank.userid=u.userid 
  and bank.price=0
  </select>
  <select id="selectChargeBank"  resultMap="BaseResultMap">
  select *
  from shop_bank bank,user u
  where bank.userid=u.userid 
  and bank.price>0
  </select>
  <select id="selectByUser" parameterType="com.neuedu.entity.User" resultMap="BaseResultMap">
  select *
  from shop_bank bank,user u
  where bank.userid = #{userid,jdbcType=INTEGER}
  and bank.userid=u.userid  
  </select>
 
</mapper>